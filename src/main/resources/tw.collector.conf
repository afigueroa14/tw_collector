#
# Spark Configuration
#
spark {

  master = "local[3]"
  app.name = "Twitter-Collector"
}

#
# configuration for Twitter
#
#  System.setProperty("twitter4j.oauth.consumerKey", "consumerKey")
twitter4j {
  oauth {
    consumerKey       = "7v7YfgmTXrY2A0pb1Q9mh9QPE"
    consumerSecret    = "lNnh2f82TnHu4iIn79gCpfqKLVUw9ZZUX6nSNTYi8xsRpzQJLP"
    accessToken       = "873380235311534080-5kF2J6arpZhr1GuVVThuxRl7B1LsTmW"
    accessTokenSecret = "BYb9GxBZKUl5nPqrjZb6QWjVBBYE9s3XI9aP2dMBVUXFA"
    ownerid = "873380235311534080"
  }

  #
  # al url = "https://stream.twitter.com/1.1/statuses/filter.json"
  #
  url = "https://stream.twitter.com/1.1/statuses/sample.json"

}

#
# Configuration parameter
#
app {

     # Allows to Setup which component to Extract data from the Twitter Stream
     track {
       emoji = true
       hashTag = true
       url  = true
       domain = true
       photo = true
     }

     #
     # Select the number of record to select
     # -1 Indicate all Record
     # 1000 No Record to Select
     #
     no_record = -1

     #
     # No of Second To collect the Data from the Stream
     StreamSeconds = 5

     # Store Stream Information
     file {

         # Setup for Store Emoji Results
         emoji {
            save = false
            filename = "tw/emoji"
            fileext   = "stream"
         }


       # Setup for Store hash Results
       hashTag {
         save = false
         filename = "tw/hashtag"
         fileext   = "stream"
       }


       # Setup for Store url Results
       url {
         save = false
         filename = "tw/urltag"
         fileext   = "stream"
       }

       # Setup for Store url Results
       domain {
         save = false
         filename = "tw/domaintag"
         fileext   = "stream"
       }

       # Setup for Store url Results
       photo {
         save = false
         filename = "tw/photo"
         fileext   = "stream"
       }

     }
}
